blogdown::install_hugo()
blogdown::new_site(theme = 'calintat/minimal')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = TRUE)
library("plotly")
library("tidyverse")
library("data.table")
library("gridExtra")
library("knitr")
library("gganimate")
# Load athletes_events data
data <- read_csv("Data/athlete_events.csv",
col_types = cols(
ID = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
glimpse(data)
head(data)
# Load data file matching NOCs with mao regions (countries)
noc <- read_csv("Data/noc_regions.csv",
col_types = cols(
NOC = col_character(),
region = col_character()
))
glimpse(noc)
head(noc)
# count number of medals awarded to each Team
medal_counts <- data %>% filter(!is.na(Medal))%>%
group_by(Team, Medal) %>%
summarize(Count=length(Medal))
# order Team by total medal count
levs <- medal_counts %>%
group_by(Team) %>%
summarize(Total=sum(Count)) %>%
arrange(desc(Total)) %>%
select(Team) %>%
slice(10:1)
medal_counts$Team <- factor(medal_counts$Team, levels=levs$Team)
medal_counts <- medal_counts %>% filter(Team != "NA")
# plot
ggplot(medal_counts, aes(x=Team, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Historical medal counts from Competitions") +
theme(plot.title = element_text(hjust = 0.5))
# Load data file matching NOCs with mao regions (countries)
noc <- read_csv("Data/noc_regions.csv",
col_types = cols(
NOC = col_character(),
region = col_character()
))
medal_counts <- data %>% filter(!is.na(Medal))%>%
group_by(NOC) %>%
summarize(Count=length(Medal))
data_regions <- medal_counts %>%
left_join(noc,by="NOC") %>%
filter(!is.na(region))
world <- map_data("world")
world <- left_join(world, data_regions, by="region")
# Plot:
p <- ggplot(world, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = Count, label= region)) +
labs(title = "regions",
x = NULL, y=NULL) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
panel.background = element_rect(fill = "navy"),
plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_colourbar(title="medals")) +
scale_fill_gradient(low="lightgreen",high="darkgreen")
# Exclude art competitions from data (I won't use them again in the kernel)
data <- data %>% filter(Sport != "Art Competitions")
# Recode year of Winter Games after 1992 to match the next Summer Games
# Thus, "Year" now applies to the Olympiad in which each Olympics occurred
original <- c(1994,1998,2002,2006,2010,2014)
new <- c(1996,2000,2004,2008,2012,2016)
for (i in 1:length(original)) {
data$Year <- gsub(original[i], new[i], data$Year)
}
data$Year <- as.integer(data$Year)
# Table counting number of athletes by Year and Sex
counts_sex <- data %>% group_by(Year, Sex) %>%
summarize(Athletes = length(unique(ID)))
counts_sex$Year <- as.integer(counts_sex$Year)
blogdown:::serve_site()
